job: &job >-
  💰 I work for TEKSystems (!tek) as a full-time Kubernetes cloud native
  infrastructure engineer and software developer (!dev) for
  a well-paying multinational corporation (!dox) supporting thousands of
  high performance machine learning compute nodes.
  
work: *job

dev: &dev >-
  💻 I prefer "software developer" or "coder" over "engineer" (which is
  illegal to call youself in Canada without specific schooling). I've
  written thousands of lines of code a dozen or so different languages
  running on millions of systems including most of the Fortune 100.
  While computer science has its place, my work has always been
  practical.

coder: *dev

tek: >-
  🤝 TEKSystems is one of the largest recruiting tech contract work
  companies. You work for TEK, but TEK equally works for you. Unlike
  other companies, you are their customer and their product. You makes
  20-40% less, but they are financially motivated to have your back,
  keep you happy, and find your next gig. The independence is worth it.

vi: &vi >-
  😎 I use Vim with vi-centricity because I want to be productive
  quickly on *any* UNIX-like (!unix) system and I actually know how to
  use leverage the full power of !UNIX !filters. Most Vim and !NeoVim
  users have no idea with that !filter command even does. The smaller
  your .vimrc, the better UNIX user you are.

vim: *vi

neovim: &neovim >-
  💩 Neovim is shit. Mostly because it has no fucking clue what the UNIX
  philosophy is about or for. Don't ruin yourself by learning it. Learn
  !vi properly. https://github.com/rwxrob/zet/tree/main/20210502133019 

nvim: *neovim

about: &about >-
  🔎 I'm Rob Muhlestein, an !engineer, !coder by !trade and !polyglot,
  !grayhat, !mentor and !FOSS contributor when not working. I live in
  Mooresville, North Carolina, USA in an apartment while my !wife
  completes her !art residency in Charlotte.  I choose not to dox my
  company so I can talk about it without disclaimers.  Yes, people from
  work know and watch the stream sometimes. Please don't dox. (Also
  !email !gh !zet !job !project !boost)

info: *about
dox: *about

foss: &foss >-
  🐧 Free and Open Source Software (FOSS) powers the world these days.
  The device you are using right now likely contains significant work
  from FOSS contributors --- especially !Apple computers, which are
  entirely built on "darwin" !BSD UNIX.

opensource: *foss

conduct: &conduct >-
  😊 My personal code of conduct (which I regularly fail to keep).  My
  main life mantra is "don't get mad, get busy" (because I get mad all
  the fucking time). I guess it is my version of "be the change you want
  to seen in the world".  https://github.com/rwxrob/zet/tree/main/20210502120622

mad: *conduct
sad: *conduct
mean: *conduct

faang: >-
  💩 FAANG is shit. It means nothing. Hell, Microsoft (!ms) isn't even
  included that's how fucking stupid the term is. People who willfully
  use it are morons. Facebook (!fb) doesn't belong, at all. MANGA is cooler,
  but still, look for more than these companies, so many companies are
  BETTER on most every objective level.

mute: &mute >-
  🙊 Mute just means I'm not using my microphone usually because I'm
  focused (!focused) and working on something and speaking breaks the
  flow (!flow). Occasionally, I'll beak the silence (when raided to say
  hello, for example).

voice: *mute

facebook: &facebook >-
  💩 Facebook got famous ranking women's faces against one another
  without their consent. It deliberately promoted illegal use to
  children under 12 ("whales") using their parents credit cards. It
  hires experts in neurological addiction and deliberately incites
  violence for money. It's  popular with hate mongers and manipulators
  (like Putin) to blow up civil society, divide families, and bring us
  to war. If you use it YOU are a part of the problem. I don't.

fb: *facebook

music: &music >-
  🎧 https://www.last.fm/user/rwxrob and !song for music. Want something
  added to the playlist? Just find a link to the song on Spotify and
  post it in chat. Happy to take requests.  I have Yoga, Beach,
  Industrial, Chillhop, Synthwave, CoffeeHouse and Piano Jazz. I don't
  really listen to more than that on stream.

playlist: *music

flow: >-
  🤔 Getting in the !flow is something that got popular with techie Cal
  Newport's completely unscientific (but probably correct) book 'Deep
  Work'. Breaking someone's flow is a cardinal sin at most tech shops.
  Keeping a flow is nearly impossible on Twitch, nearly. Using pomodoro
  helps (!pomo).

pomo: &pomo >-
   🍅 ding dong, time to take a 12 pomo break! ❓ Pomodoro method means
   focusing on something intensely then taking a regular break.  Our
   sessions are 54 minutes long since Twitch gives us free,
   uninterrupted time if we take a 12 minute break. Nobody wants an add
   to interrupt them during their flow, right? (!flow) Read more at
   https://github.com/rwxrob/pomo, or add to your own Bonzai tree (!bonzai)

break: *pomo

bonzai: &bonzai >-
  🌳 Bonzai™ (z) is a command compositor with recursive tab completion
  I made to replace messy shell scripts with a single Go monolith
  command tree binary that I can curl onto any device, anywhere. You
  can make everything from utility libraries to modular, extensible root
  kits with it. If you need help creating your own 'z' just ask. If you
  want to learn Go make sure to catch the Beginner Boost on May 4th
  (!boost).  http://github.com/rwxrob/bonzai

z: *bonzai

boost: &boost >-
  ⚡ https://github.com/rwxrob/boost The SKILSTAK Beginner Boost™ series
  is an annual cycle of free, live, no-strings-attached, tech
  instruction focused on helping people get (and keep) infrastructure
  engineering jobs. It always starts on May the 4th at 11:11:11 and
  happening weekly live for five hours every Saturday with AMA sessions
  on Sundays. (There's a countdown timer in on my screen.) Check GitHub
  for prereqs, outline, and previous year's boosts. Every year changes.

beginner: *boost

song: "{readapi.https://groke.se/twitch/spotify/?db6e44917a20ad6113d8bd93620a748e}"

focus: &focus >-
  🤔🎧 I'm focused right now to stay in the flow (!flow). Best way to
  communicate is send a chat message that I'll maybe eventually read --
  especially if you have a Q at the beginning. Catch me on my break
  (!pomo). I might talk then. Please chat away though, others here might
  be able to answer your questions. Also look up the commands (!cmds).

focused: *focus

search: &search >-
  ❓ I search from the command line using three commands 'duck' (?) or
  'google' (??) or 'bing' (???) which open the results in my highly
  customized lynx (!lynx) browser. This means my command line history
  becomes my search history, which I search using Vim mode ('set -o
  vi').

?: *search
??: *search
???: *search

lynx: &lynx >-
  😼 Lynx (the text-based web browser) in Vi mode is the fastest way to
  do web research, period. I pity graphic web browser users ---
  especailly hackers --- who haven't learned it. Need a graphic browser?
  Just hit comma (,) to open it. There's no tracking and text is
  consistent so your eyes remain focused and able to scan at maximum
  speed. Watch me if you're not convinced. Start with w3m if Lynx is too
  much at first.  https://github.com/rwxrob/lynx

web: *lynx
browser: *lynx

fish: &fish >-
  🐟 The fishies are the ancient Perl asciiquarium script that has been
  modified (by @qmacro) to have "rwx" on one of the fish and uses
  transparent background (instead of black). You can get a copy under
  "scripts" in my https://github.com/rwxrob/dot files.

help: >-
  😃 I'm happy to help when and if I can, but often I just can't. We
  like to help people help themselves. If you haven't even done miminal
  research expect to be gently mocked. (It's just fucking rude.)
  Otherwise, ask with a Q and someone will maybe help you out. You can
  also ask in our !discord where you will have a better chance of
  getting help. If you are asking us to do your homework or hack
  someone, forget it.

name: &name >-
  🔒 The 'rwx' in my name means 'read, write, execute' and refers to the
  UNIX/Linux permissions on any file or directory. But RWX is also
  a personal recipe for learning and success: 'read, research', 'write
  about it', and 'experiment, explore, experience'. There's no better
  learning methodolog, grounded in pragmatism. !boost

rwx: *name

beej: >-
  📕 http://beej.us/guide/bgnet/ Beej's Guide to Network Programming is
  one of the best resources any developer should ever read. It covers
  things that are not intuitive to beginners like proper UNIX file locking.

started: >-
  🐣👶 I started coding at 11 on the only Atari 400 at school coding
  BASIC making !dnd character generation programs and my simple take on
  missle command by entering the position. I dropped coding for most of
  my teen years and picked up again in my 20s in college where I taught
  myself HTML from by reading !rfcs and learned Pascal before changing
  majors from CS to !Russian.

dnd: >-
  🐉 I played tons of Dungeons and Dragons as a kid. I credit it for so
  much of what I've been able to do since then. It really engrains
  problem-solving and creativity in ways few other things can. I created
  my own huge campaigns and hoped to work for TSR one day (which would
  have been a very bad idea). I had hundreds of figures that I hand
  painted and did some of my own art for the game. I was obsessed with
  Boris Vallejo and Dungeon Magazine. (I was also really hornt).

russian: >-
  The Cold War ended while I was in college. I ended up majoring in
  Russian. I worked as a cruise and tour director in Moscow, St.
  Petersburg, and Ukraine and made deep friendships (and some enemies)
  while there. I have *many* stories about living and working in Russia
  (including traveling with an arms dealer on the train, translating
  rough conversations for the mafia, and being body guard to Samatha Fox
  on tour). I deeply love the Russian people (except Putin who should
  die painfully).

rfcs: >-
  📗 An IETF RFC is what specifies how the Internet works. Reading them
  can be very illumiating.

go: &go >-
  💻💨 https://github.com/rwxrob/awesome-go Go is the language of cloud
  native computing and my personal favorite. You can get shit done
  quickly and safely in it which is why it was picked for Docker,
  Kubernetes, Prometheus, Helm, and so many more massive applications
  with huge impact and designed by the tech-gods Thompson/Pike/Greisemer
  (also involved in creating UNIX, C, and Unicode) to meet real needs at
  Google. It was specifically designed to replace Java/Python/C/C++.

golang: *go

sleep: >-
  🥱💤 I do sleep. I promise. People just have a hard time tracking when
  I do because I break my sleep schedule up. It's called "bi-modal"
  sleep and people have been doing it for as long as there have been
  people. Look it up. Not for everyone, and I can't do it when I am also
  training for 10k's (or whatever). But otherwise, I get two maximized
  brain-power times per day (instead of pushing through groggy the
  second half of the day and wasting it). !schedule

terminal: &terminal >-
  💻 I use a slightly darkened version of GruvBox on a 81x25 Microsoft
  Terminal from which I ssh into "anton" (my local Ubuntu Server vm in
  VirtualBox named in honor of Gilfoyle) and run nested TMUX. Font is
  28p Ubuntu Mono with wrap set to 72 column. I used to do transparent
  background for streaming but it was murder on my eyes.

color: *terminal
font: *terminal

schedule: &schedule >-
  🕐 https://twitch.tv/rwxrob/schedule I try to keep a schedule but
  regularly fail. Generally, I follow this bi-modal !sleep schedule.
  I usually stream most of my waking hours: 10pm-7am, 11am-6pm (US
  Eastern Time !dox) See !boost for Beginner Boost schedule.

sched: *schedule
